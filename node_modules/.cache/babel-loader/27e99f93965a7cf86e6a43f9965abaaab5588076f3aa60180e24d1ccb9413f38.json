{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\FotoReceta\\\\src\\\\components\\\\pages\\\\RecipesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport mockRecipes from '../../data/mock_recipes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipesPage = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Obtener ingredientes del localStorage\n    const storedIngredients = localStorage.getItem('detectedIngredients');\n    if (!storedIngredients) {\n      navigate('/camera');\n      return;\n    }\n    const parsedIngredients = JSON.parse(storedIngredients);\n    setIngredients(parsedIngredients);\n\n    // Filtrar recetas basadas en los ingredientes\n    const filteredRecipes = filterRecipesByIngredients(parsedIngredients);\n    setRecipes(filteredRecipes);\n    setLoading(false);\n  }, [navigate]);\n\n  // Función para filtrar recetas según ingredientes disponibles\n  const filterRecipesByIngredients = availableIngredients => {\n    // Calcular un puntaje para cada receta basado en cuántos ingredientes coinciden\n    const recipesWithScore = mockRecipes.map(recipe => {\n      const matchingIngredients = recipe.ingredients.filter(ingredient => availableIngredients.some(available => available.toLowerCase().includes(ingredient.toLowerCase()) || ingredient.toLowerCase().includes(available.toLowerCase())));\n      const matchPercentage = matchingIngredients.length / recipe.ingredients.length * 100;\n      return {\n        ...recipe,\n        matchingIngredients,\n        matchPercentage\n      };\n    });\n\n    // Ordenar por porcentaje de coincidencia (de mayor a menor)\n    return recipesWithScore.filter(recipe => recipe.matchPercentage > 0) // Solo recetas con al menos una coincidencia\n    .sort((a, b) => b.matchPercentage - a.matchPercentage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Recetas sugeridas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ingredientes disponibles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '5px',\n          marginBottom: '20px'\n        },\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: '#FF6600',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '20px',\n            fontSize: '0.9rem'\n          },\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ingredients\",\n        className: \"btn btn-outline\",\n        children: \"Editar ingredientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: [\"Hemos encontrado \", recipes.length, \" recetas que puedes hacer con tus ingredientes:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes-grid\",\n        children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Coincidencia: \", Math.round(recipe.matchPercentage), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [recipe.matchingIngredients.length, \" de \", recipe.ingredients.length, \" ingredientes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/recipe/${recipe.id}`,\n                className: \"btn btn-primary\",\n                children: \"Ver receta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, recipe.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No se encontraron recetas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hemos encontrado recetas que coincidan con tus ingredientes. Intenta a\\xF1adir m\\xE1s ingredientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ingredients\",\n        className: \"btn btn-primary mt-2\",\n        children: \"Editar ingredientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipesPage, \"NtHNo26B3pO5Ur42JQnJCmDwjCI=\", false, function () {\n  return [useNavigate];\n});\n_c = RecipesPage;\nexport default RecipesPage;\nvar _c;\n$RefreshReg$(_c, \"RecipesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","mockRecipes","jsxDEV","_jsxDEV","RecipesPage","_s","recipes","setRecipes","ingredients","setIngredients","loading","setLoading","navigate","storedIngredients","localStorage","getItem","parsedIngredients","JSON","parse","filteredRecipes","filterRecipesByIngredients","availableIngredients","recipesWithScore","map","recipe","matchingIngredients","filter","ingredient","some","available","toLowerCase","includes","matchPercentage","length","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","marginBottom","index","background","color","padding","borderRadius","fontSize","to","src","image","alt","title","Math","round","id","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/FotoReceta/src/components/pages/RecipesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport mockRecipes from '../../data/mock_recipes';\r\n\r\nconst RecipesPage = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    // Obtener ingredientes del localStorage\r\n    const storedIngredients = localStorage.getItem('detectedIngredients');\r\n    \r\n    if (!storedIngredients) {\r\n      navigate('/camera');\r\n      return;\r\n    }\r\n    \r\n    const parsedIngredients = JSON.parse(storedIngredients);\r\n    setIngredients(parsedIngredients);\r\n    \r\n    // Filtrar recetas basadas en los ingredientes\r\n    const filteredRecipes = filterRecipesByIngredients(parsedIngredients);\r\n    setRecipes(filteredRecipes);\r\n    setLoading(false);\r\n  }, [navigate]);\r\n  \r\n  // Función para filtrar recetas según ingredientes disponibles\r\n  const filterRecipesByIngredients = (availableIngredients) => {\r\n    // Calcular un puntaje para cada receta basado en cuántos ingredientes coinciden\r\n    const recipesWithScore = mockRecipes.map(recipe => {\r\n      const matchingIngredients = recipe.ingredients.filter(ingredient => \r\n        availableIngredients.some(available => \r\n          available.toLowerCase().includes(ingredient.toLowerCase()) || \r\n          ingredient.toLowerCase().includes(available.toLowerCase())\r\n        )\r\n      );\r\n      \r\n      const matchPercentage = (matchingIngredients.length / recipe.ingredients.length) * 100;\r\n      \r\n      return {\r\n        ...recipe,\r\n        matchingIngredients,\r\n        matchPercentage\r\n      };\r\n    });\r\n    \r\n    // Ordenar por porcentaje de coincidencia (de mayor a menor)\r\n    return recipesWithScore\r\n      .filter(recipe => recipe.matchPercentage > 0) // Solo recetas con al menos una coincidencia\r\n      .sort((a, b) => b.matchPercentage - a.matchPercentage);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"text-center mb-3\">Recetas sugeridas</h2>\r\n      \r\n      <div className=\"mb-3\">\r\n        <h4>Ingredientes disponibles:</h4>\r\n        <div style={{ \r\n          display: 'flex', \r\n          flexWrap: 'wrap', \r\n          gap: '5px',\r\n          marginBottom: '20px'\r\n        }}>\r\n          {ingredients.map((ingredient, index) => (\r\n            <span \r\n              key={index}\r\n              style={{\r\n                background: '#FF6600',\r\n                color: 'white',\r\n                padding: '5px 10px',\r\n                borderRadius: '20px',\r\n                fontSize: '0.9rem'\r\n              }}\r\n            >\r\n              {ingredient}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        \r\n        <Link to=\"/ingredients\" className=\"btn btn-outline\">\r\n          Editar ingredientes\r\n        </Link>\r\n      </div>\r\n      \r\n      {loading ? (\r\n        <div className=\"loader-container\">\r\n          <div className=\"loader\"></div>\r\n        </div>\r\n      ) : recipes.length > 0 ? (\r\n        <div>\r\n          <p className=\"mb-2\">\r\n            Hemos encontrado {recipes.length} recetas que puedes hacer con tus ingredientes:\r\n          </p>\r\n          \r\n          <div className=\"recipes-grid\">\r\n            {recipes.map(recipe => (\r\n              <div key={recipe.id} className=\"recipe-card\">\r\n                <img src={recipe.image} alt={recipe.title} />\r\n                <div className=\"recipe-card-content\">\r\n                  <h3>{recipe.title}</h3>\r\n                  <p>Coincidencia: {Math.round(recipe.matchPercentage)}%</p>\r\n                  <p>\r\n                    <small>\r\n                      {recipe.matchingIngredients.length} de {recipe.ingredients.length} ingredientes\r\n                    </small>\r\n                  </p>\r\n                  <div className=\"mt-2\">\r\n                    <Link to={`/recipe/${recipe.id}`} className=\"btn btn-primary\">\r\n                      Ver receta\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <h3>No se encontraron recetas</h3>\r\n          <p>No hemos encontrado recetas que coincidan con tus ingredientes. Intenta añadir más ingredientes.</p>\r\n          <Link to=\"/ingredients\" className=\"btn btn-primary mt-2\">\r\n            Editar ingredientes\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}