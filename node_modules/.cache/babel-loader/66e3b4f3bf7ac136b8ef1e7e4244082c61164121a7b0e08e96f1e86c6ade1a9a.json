{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\FotoReceta\\\\src\\\\components\\\\pages\\\\CameraPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [captureMode, setCaptureMode] = useState(true);\n  const [error, setError] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Iniciar la cámara\n  useEffect(() => {\n    if (captureMode) {\n      const startCamera = async () => {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: {\n              facingMode: 'environment'\n            }\n          });\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        } catch (err) {\n          console.error('Error al acceder a la cámara:', err);\n          setError('No se pudo acceder a la cámara. Por favor, permite el acceso o sube una imagen.');\n          setCaptureMode(false);\n        }\n      };\n      startCamera();\n\n      // Limpiar cuando el componente se desmonte\n      return () => {\n        if (videoRef.current && videoRef.current.srcObject) {\n          const tracks = videoRef.current.srcObject.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n      };\n    }\n  }, [captureMode]);\n\n  // Capturar la imagen\n  const captureImage = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      // Ajustar el tamaño del canvas para coincidir con el video\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Dibujar el frame actual en el canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Convertir a base64\n      const dataUrl = canvas.toDataURL('image/jpeg');\n      setImageData(dataUrl);\n\n      // Detener la cámara\n      const tracks = video.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n\n      // Analizar la imagen\n      analyzeImage(dataUrl);\n    }\n  };\n\n  // Manejar la carga de una imagen desde el dispositivo\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImageData(e.target.result);\n        analyzeImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Analizar la imagen con Google Vision API\n  const analyzeImage = async imageDataUrl => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Eliminar el prefijo 'data:image/jpeg;base64,' para obtener solo los datos base64\n      const base64Image = imageDataUrl.split(',')[1];\n\n      // Preparar la petición para Google Vision API\n      const apiKey = process.env.REACT_APP_VISION_API_KEY;\n      const apiUrl = `https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`;\n      const requestBody = {\n        requests: [{\n          image: {\n            content: base64Image\n          },\n          features: [{\n            type: 'LABEL_DETECTION',\n            maxResults: 20\n          }]\n        }]\n      };\n\n      // Realizar la petición\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error.message || 'Error al analizar la imagen');\n      }\n\n      // Filtrar los resultados para obtener solo ingredientes de comida\n      const foodCategories = ['Food', 'Fruit', 'Vegetable', 'Meat', 'Dairy', 'Ingredient', 'Produce'];\n      const allLabels = data.responses[0].labelAnnotations || [];\n      const foodLabels = allLabels.filter(label => {\n        return foodCategories.some(category => label.description.toLowerCase().includes(category.toLowerCase()) || label.description.length < 20 // Ingredientes suelen ser palabras cortas\n        );\n      });\n\n      // Extraer solo los nombres de los ingredientes\n      const ingredients = foodLabels.map(label => label.description.toLowerCase());\n\n      // Eliminar duplicados\n      const uniqueIngredients = [...new Set(ingredients)];\n      if (uniqueIngredients.length === 0) {\n        setError('No se pudieron detectar ingredientes en la imagen. Inténtalo con otra foto o añade los ingredientes manualmente.');\n        setIsLoading(false);\n        return;\n      }\n\n      // Guardar en localStorage y navegar a la página de ingredientes\n      localStorage.setItem('detectedIngredients', JSON.stringify(uniqueIngredients));\n      localStorage.setItem('capturedImage', imageDataUrl);\n      setIsLoading(false);\n      navigate('/ingredients');\n    } catch (err) {\n      console.error('Error al analizar la imagen:', err);\n      setError('Hubo un problema al analizar la imagen. Por favor, inténtalo de nuevo.');\n      setIsLoading(false);\n    }\n  };\n\n  // Cambiar entre modo cámara y subida de archivo\n  const toggleCaptureMode = () => {\n    setCaptureMode(!captureMode);\n    setError(null);\n\n    // Si cambiamos a modo subida, detener la cámara\n    if (captureMode && videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Captura tus ingredientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        backgroundColor: '#ffdddd',\n        color: '#ff0000',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-container\",\n      children: captureMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!imageData && /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          className: \"video-preview\",\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), imageData && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageData,\n          alt: \"Imagen capturada\",\n          className: \"image-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [imageData ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageData,\n          alt: \"Imagen subida\",\n          className: \"image-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            height: '300px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#f5f5f5',\n            border: '2px dashed #ccc'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Por favor, sube una imagen o cambia a modo c\\xE1mara\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          ref: fileInputRef,\n          onChange: handleFileUpload,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-controls\",\n      children: [captureMode ? !imageData ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: captureImage,\n        children: \"Tomar foto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => setImageData(null),\n        children: \"Tomar otra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => fileInputRef.current.click(),\n        children: \"Subir imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: toggleCaptureMode,\n        children: captureMode ? 'Modo subida' : 'Modo cámara'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: \"Analizando imagen...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraPage, \"VoERgE09pJM656JicbLBbCkw8tk=\", false, function () {\n  return [useNavigate];\n});\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraPage","_s","imageData","setImageData","isLoading","setIsLoading","captureMode","setCaptureMode","error","setError","videoRef","canvasRef","fileInputRef","navigate","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","console","tracks","getTracks","forEach","track","stop","captureImage","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","dataUrl","toDataURL","analyzeImage","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","imageDataUrl","base64Image","split","apiKey","process","env","REACT_APP_VISION_API_KEY","apiUrl","requestBody","requests","image","content","features","type","maxResults","response","fetch","method","headers","body","JSON","stringify","data","json","Error","message","foodCategories","allLabels","responses","labelAnnotations","foodLabels","filter","label","some","category","description","toLowerCase","includes","length","ingredients","map","uniqueIngredients","Set","localStorage","setItem","toggleCaptureMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","marginBottom","ref","autoPlay","playsInline","src","alt","display","alignItems","justifyContent","border","accept","onChange","onClick","click","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/FotoReceta/src/components/pages/CameraPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CameraPage = () => {\r\n  const [imageData, setImageData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [captureMode, setCaptureMode] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  \r\n  // Iniciar la cámara\r\n  useEffect(() => {\r\n    if (captureMode) {\r\n      const startCamera = async () => {\r\n        try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({\r\n            video: { facingMode: 'environment' }\r\n          });\r\n          \r\n          if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n          }\r\n        } catch (err) {\r\n          console.error('Error al acceder a la cámara:', err);\r\n          setError('No se pudo acceder a la cámara. Por favor, permite el acceso o sube una imagen.');\r\n          setCaptureMode(false);\r\n        }\r\n      };\r\n      \r\n      startCamera();\r\n      \r\n      // Limpiar cuando el componente se desmonte\r\n      return () => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          const tracks = videoRef.current.srcObject.getTracks();\r\n          tracks.forEach(track => track.stop());\r\n        }\r\n      };\r\n    }\r\n  }, [captureMode]);\r\n  \r\n  // Capturar la imagen\r\n  const captureImage = () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n      \r\n      // Ajustar el tamaño del canvas para coincidir con el video\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      \r\n      // Dibujar el frame actual en el canvas\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      \r\n      // Convertir a base64\r\n      const dataUrl = canvas.toDataURL('image/jpeg');\r\n      setImageData(dataUrl);\r\n      \r\n      // Detener la cámara\r\n      const tracks = video.srcObject.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      \r\n      // Analizar la imagen\r\n      analyzeImage(dataUrl);\r\n    }\r\n  };\r\n  \r\n  // Manejar la carga de una imagen desde el dispositivo\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setImageData(e.target.result);\r\n        analyzeImage(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  // Analizar la imagen con Google Vision API\r\n  const analyzeImage = async (imageDataUrl) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Eliminar el prefijo 'data:image/jpeg;base64,' para obtener solo los datos base64\r\n      const base64Image = imageDataUrl.split(',')[1];\r\n      \r\n      // Preparar la petición para Google Vision API\r\n      const apiKey = process.env.REACT_APP_VISION_API_KEY;\r\n      const apiUrl = `https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`;\r\n      \r\n      const requestBody = {\r\n        requests: [\r\n          {\r\n            image: {\r\n              content: base64Image\r\n            },\r\n            features: [\r\n              {\r\n                type: 'LABEL_DETECTION',\r\n                maxResults: 20\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      \r\n      // Realizar la petición\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.error) {\r\n        throw new Error(data.error.message || 'Error al analizar la imagen');\r\n      }\r\n      \r\n      // Filtrar los resultados para obtener solo ingredientes de comida\r\n      const foodCategories = ['Food', 'Fruit', 'Vegetable', 'Meat', 'Dairy', 'Ingredient', 'Produce'];\r\n      \r\n      const allLabels = data.responses[0].labelAnnotations || [];\r\n      const foodLabels = allLabels.filter(label => {\r\n        return foodCategories.some(category => \r\n          label.description.toLowerCase().includes(category.toLowerCase()) ||\r\n          label.description.length < 20 // Ingredientes suelen ser palabras cortas\r\n        );\r\n      });\r\n      \r\n      // Extraer solo los nombres de los ingredientes\r\n      const ingredients = foodLabels.map(label => label.description.toLowerCase());\r\n      \r\n      // Eliminar duplicados\r\n      const uniqueIngredients = [...new Set(ingredients)];\r\n      \r\n      if (uniqueIngredients.length === 0) {\r\n        setError('No se pudieron detectar ingredientes en la imagen. Inténtalo con otra foto o añade los ingredientes manualmente.');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Guardar en localStorage y navegar a la página de ingredientes\r\n      localStorage.setItem('detectedIngredients', JSON.stringify(uniqueIngredients));\r\n      localStorage.setItem('capturedImage', imageDataUrl);\r\n      setIsLoading(false);\r\n      \r\n      navigate('/ingredients');\r\n      \r\n    } catch (err) {\r\n      console.error('Error al analizar la imagen:', err);\r\n      setError('Hubo un problema al analizar la imagen. Por favor, inténtalo de nuevo.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Cambiar entre modo cámara y subida de archivo\r\n  const toggleCaptureMode = () => {\r\n    setCaptureMode(!captureMode);\r\n    setError(null);\r\n    \r\n    // Si cambiamos a modo subida, detener la cámara\r\n    if (captureMode && videoRef.current && videoRef.current.srcObject) {\r\n      const tracks = videoRef.current.srcObject.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"text-center mb-3\">Captura tus ingredientes</h2>\r\n      \r\n      {error && (\r\n        <div className=\"card\" style={{ backgroundColor: '#ffdddd', color: '#ff0000', marginBottom: '20px' }}>\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"camera-container\">\r\n        {captureMode ? (\r\n          <>\r\n            {!imageData && (\r\n              <video \r\n                ref={videoRef} \r\n                className=\"video-preview\" \r\n                autoPlay \r\n                playsInline \r\n              />\r\n            )}\r\n            \r\n            {imageData && (\r\n              <img \r\n                src={imageData} \r\n                alt=\"Imagen capturada\" \r\n                className=\"image-preview\"\r\n              />\r\n            )}\r\n            \r\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {imageData ? (\r\n              <img \r\n                src={imageData} \r\n                alt=\"Imagen subida\" \r\n                className=\"image-preview\"\r\n              />\r\n            ) : (\r\n              <div \r\n                className=\"card\" \r\n                style={{ \r\n                  height: '300px', \r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  justifyContent: 'center',\r\n                  backgroundColor: '#f5f5f5',\r\n                  border: '2px dashed #ccc'\r\n                }}\r\n              >\r\n                <p>Por favor, sube una imagen o cambia a modo cámara</p>\r\n              </div>\r\n            )}\r\n            \r\n            <input \r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              ref={fileInputRef}\r\n              onChange={handleFileUpload}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"camera-controls\">\r\n        {captureMode ? (\r\n          !imageData ? (\r\n            <button \r\n              className=\"btn btn-primary\" \r\n              onClick={captureImage}\r\n            >\r\n              Tomar foto\r\n            </button>\r\n          ) : (\r\n            <button \r\n              className=\"btn btn-primary\" \r\n              onClick={() => setImageData(null)}\r\n            >\r\n              Tomar otra\r\n            </button>\r\n          )\r\n        ) : (\r\n          <button \r\n            className=\"btn btn-primary\" \r\n            onClick={() => fileInputRef.current.click()}\r\n          >\r\n            Subir imagen\r\n          </button>\r\n        )}\r\n        \r\n        <button \r\n          className=\"btn btn-secondary\" \r\n          onClick={toggleCaptureMode}\r\n        >\r\n          {captureMode ? 'Modo subida' : 'Modo cámara'}\r\n        </button>\r\n      </div>\r\n      \r\n      {isLoading && (\r\n        <div className=\"loader-container\">\r\n          <div className=\"loader\"></div>\r\n          <p className=\"mt-2\">Analizando imagen...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}